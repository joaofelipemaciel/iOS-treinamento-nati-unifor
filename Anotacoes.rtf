{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf400
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 LucidaGrande;}
{\colortbl;\red255\green255\blue255;\red38\green38\blue38;}
{\*\expandedcolortbl;;\cssrgb\c20000\c20000\c20000;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 StackView = N\'e1o precisa de constraints, ele redimensiona as coisas\
\
Configuracao da StackView\
\
Criar o Outlet da Label\
\
Vincular a Label com o Outlet?\
\
\pard\pardeftab720\partightenfactor0

\f1\fs34 \cf2 \expnd0\expndtw0\kerning0
\uc0\u8984  + -> == Gira a tela\
\
Criar arquivo .xcworkspace\
\
git init [inicia o git no repositorio]\
\
Get -> Read\
Post -> Create\
Put -> Update\
Delete -> Delete\
CRUD\
\
Headers = Cabecalho da requisicao, muitas delas precisam estar logado para acessar as 'coisas'\
Geralmente, 'guarda' 3 coisas para se logar:\
1) access-Token: o valor unico que se tem para saber como loga. 1 token por secao.\
2) Client:\
3) UID: \
\
Mandar a requisicao no header as informacoes necessarias para saber quem eh quem.\
\
informacoes para buscar algo: paSSAR o id do contato, os quais serao passados nos parametros.\
\
se tiver que criar um exemplo, um repositorio: criar um Json\
\
Dicionario no Swift => chave e valor\
Serve de interface \
\
Json -> agrupam no nome do valor, com o valor que ele eh. O campo Json que tem o "id", vai ser armazenado no id.\
\'e9 uma especie de dicionario\
estrutura de valor que guarda informacoes., usado para transmitir dados.\
"owner": [\{...\}], [\{...\}] (+de1 owner)\
\
Existe mais de 1 metodo Alamofire para fazer uma requisicao: DataRequest / DataRequest\
\
Alamofire.request\
\
Valor default\
\
\
\
GitHub -> Swift Json}